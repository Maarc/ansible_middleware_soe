---
- name: Create ticket-monster directory
  file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  with_items:
    - "{{ app_dir }}"
    - "{{ java_code_dir }}"
    - "{{ java_code_dir }}/tm"

- name: Download petclinic
  get_url:
    url: "http://central.maven.org/maven2/com/webcohesion/enunciate/enunciate-examples-spring-petclinic/2.3.0/enunciate-examples-spring-petclinic-2.3.0.war"
    dest: "{{ app_dir }}/petclinic.war"

- name: Download "jenkins.war"
  get_url:
    url: "http://mirrors.jenkins-ci.org/war/latest/jenkins.war"
    dest: "{{ app_dir }}/jenkins.war"

- name: Check existence of ticket-monster
  stat:
    path: "{{ app_dir }}/ticket-monster.war"
  register: tm_exists

- name: Checkout ticket-monster
  when: tm_exists.stat.exists == false
  git:
    repo: "https://github.com/jboss-developer/ticket-monster.git"
    dest: "{{ java_code_dir }}/tm"
    version: "2.7.0.Final"
    force: yes

- name: Build "ticket-monster.war"
  when: tm_exists.stat.exists == false
  command: "mvn -T 4 clean package -f {{ java_code_dir }}/tm/demo/pom.xml"

- name: Copy "ticket-monster.war"
  copy:
    src: "{{ java_code_dir }}/tm/demo/target/ticket-monster.war"
    dest: "{{ app_dir }}/ticket-monster.war"

- name: Download "tomcat-sample.war"
  get_url:
    url: "https://tomcat.apache.org/tomcat-8.0-doc/appdev/sample/sample.war"
    dest: "{{ app_dir }}/tomcat-sample.war"

#- name: Upload applications to nexus
#  command: "curl -v -F r={{ nexus_repository_id }} -F hasPom=false -F e=war -F g=com.redhat.jboss -F a={{ item }} -F v=1.0 -F p=war -F file=@{{ app_dir }}/{{ item }} -u {{ nexus_user }}:{{ nexus_password }} {{ nexus_upload_url }}"
#  with_items:
#    - "ticket-monster.war"
#    - "petclinic.war"
#    - "jenkins.war"
